Group number: 
Partner 1, Name and personal number:
Partner 2, Name and personal number:

Question 1

The flag -Wall says that warnings will be raised about code that uses "questionable" constructions that aren't outright wrong.

The flag -g says that debugging information will be produced by the compiler.

Question 2

fork
    Brief function description -- Duplicates the current process into a new process.
    Arguments description -- No arguments.
    Required include files -- unistd.h
    All possible return values --
		On success: Thread ID of the child process (but 0 in the child process).
		On failure: -1.

clone
    Brief function description -- Create a new process sharing the same memory space as the original, in order to create threads.
    Arguments description --
		fn: The function to run in the new process.
		child_stack: Pointer to a stack for the new process.
		flags: Various options.
		arg: An argument to pass to the function.
    Required include files -- sched.h
    All possible return values --
		On success: Thread ID of the child process.
		On failure: -1.

creat
    Brief function description -- Opens and possibly creates a file (or device).
    Arguments description --
		pathname: The name of the file.
		mode: Whether we want to read, write, or read and write to the file (O_RDONLY, O_WRONLY, O_RDWR).
    Required include files -- types.h, stat.h, fcntl.h
    All possible return values --
		On success: The new file descriptor.
		On failure: -1.

open
    Brief function description --
    Arguments description --
    Required include files --
    All possible return values --

close
    Brief function description --
    Arguments description --
    Required include files --
    All possible return values --

wait
    Brief function description --
    Arguments description --
    Required include files --
    All possible return values --

stat
    Brief function description --
    Arguments description --
    Required include files --
    All possible return values --

signal
    Brief function description --
    Arguments description --
    Required include files --
    All possible return values --

pipe
    Brief function description --
    Arguments description --
    Required include files --
    All possible return values --

dup
    Brief function description --
    Arguments description --
    Required include files --
    All possible return values --

exit
    Brief function description --
    Arguments description --
    Required include files --
    All possible return values --

execvp
    Brief function description --
    Arguments description --
    Required include files --
    All possible return values --

chdir
    Brief function description --
    Arguments description --
    Required include files --
    All possible return values --

Question 3

The programs does ... <this>

Point #1 handles key combination .... and point #2 key 
combination ....

Both combinations are handled because ... 
or
Only point #1/point#2 is being handled but we can handle
both by ....
or
No key combination is being handled but we can handle
both by ....

Question 4

The parent process is ... <doing something>
and the child process is ... <doing something else>
using ... <this thing>

The close(p[0]) command is used to ... and the close(p[1]) 
command to ...


Question 5

The command is ...
In case that ... it prints that ...
However, if there are no ... then it merely prints ...

Here is a command that kills a zombie process:

We should use such a command when ...


The command ulimit allows us to ...

We can restrict processes from executing programs that
proliferate zombie by ...

We can extend that technique to other resources by ...